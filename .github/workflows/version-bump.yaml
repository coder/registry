name: Version Bump

on:
  pull_request:
    types: [opened, synchronize, labeled]
    paths:
      - 'registry/**/modules/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  version-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if version bump is needed
        run: |
          echo "🔍 Checking if module versions need to be updated..."
          
          # Run the script with patch to see if it would make changes
          if ./.github/scripts/version-bump.sh patch origin/main; then
            # Check if the script made any changes
            if git diff --quiet; then
              echo "✅ Module versions are up to date"
            else
              echo "❌ Module versions need to be updated!"
              echo "The script would make the following changes:"
              git diff --name-only
              echo ""
              echo "To fix this, add a version label to your PR:"
              echo "- version:patch (for bug fixes)"
              echo "- version:minor (for new features)"
              echo "- version:major (for breaking changes)"
              exit 1
            fi
          else
            echo "ℹ️ No modules detected in changes"
          fi

  version-bump:
    if: github.event.label.name == 'version:patch' || github.event.label.name == 'version:minor' || github.event.label.name == 'version:major'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract bump type from label
        id: bump-type
        run: |
          case "${{ github.event.label.name }}" in
            "version:patch")
              echo "type=patch" >> $GITHUB_OUTPUT
              ;;
            "version:minor")
              echo "type=minor" >> $GITHUB_OUTPUT
              ;;
            "version:major")
              echo "type=major" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "Invalid version label: ${{ github.event.label.name }}"
              exit 1
              ;;
          esac

      - name: Run version bump script
        id: version-bump
        run: |
          # Run the script to update versions
          output_file=$(mktemp)
          if ./.github/scripts/version-bump.sh "${{ steps.bump-type.outputs.type }}" origin/main > "$output_file" 2>&1; then
            echo "success=true" >> $GITHUB_OUTPUT
            echo "Script completed successfully"
          else
            echo "success=false" >> $GITHUB_OUTPUT
            echo "Script failed"
            cat "$output_file"
            exit 1
          fi
          
          # Store output for PR comment
          {
            echo "output<<EOF"
            cat "$output_file"
            echo "EOF"
          } >> $GITHUB_OUTPUT
          
          # Show output
          cat "$output_file"

      - name: Check for changes and commit
        if: steps.version-bump.outputs.success == 'true'
        run: |
          # Check if any files were modified
          if git diff --quiet; then
            echo "No changes to commit"
          else
            echo "Committing version bump changes..."
            git add .
            git commit -m "chore: bump module versions (${{ steps.bump-type.outputs.type }})"
            git push
          fi

      - name: Comment on PR
        if: steps.version-bump.outputs.success == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `${{ steps.version-bump.outputs.output }}`;
            const bumpType = `${{ steps.bump-type.outputs.type }}`;
            
            let comment = `## 🚀 Version Bump Summary\n\n`;
            comment += `**Bump Type:** \`${bumpType}\`\n\n`;
            comment += `### Script Output:\n\`\`\`\n${output}\n\`\`\`\n\n`;
            comment += `> Versions have been automatically updated using the version bump script.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });